# -*- coding: utf-8 -*-
"""newwebapp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11jNSns7ql4E2ib-1qC5sfqWAON8UQ3UB
"""

import streamlit as st
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.preprocessing import LabelEncoder

data = pd.read_csv('Emotion_classify_Data.csv')
model = MultinomialNB()

label_encoder = LabelEncoder()
y = label_encoder.fit_transform(data['Emotion'])

tfidf_vectorizer = TfidfVectorizer(max_features=5000)
X_tfidf = tfidf_vectorizer.fit_transform(data['Comment'])

model.fit(X_tfidf, y)

emotion_images = {
    "anger": "/content/angry.gif",
    "joy": "/content/joy.gif",
    "fear": "/content/fear.gif",
}

def predict_emotion(input_text):
    input_text = [input_text]
    input_tfidf = tfidf_vectorizer.transform(input_text)
    predicted_label = model.predict(input_tfidf)
    predicted_emotion = label_encoder.inverse_transform(predicted_label)

    return predicted_emotion[0]

st.title("Emotion Classification App")

user_input = st.text_area("Enter a comment:")
if user_input:
    emotion = predict_emotion(user_input)
    st.write(f"Predicted Emotion: {emotion}")

    if emotion in emotion_images:
        image_path = emotion_images[emotion]
        st.image(image_path, use_column_width=True)

